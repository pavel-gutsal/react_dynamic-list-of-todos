{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","options","query","setShow","show","className","filter","el","completed","title","includes","map","userId","type","onClick","id","TodoFilter","setOptions","setQuery","useState","search","setSearch","onSubmit","e","preventDefault","submitHandler","onChange","target","value","placeholder","style","pointerEvents","Loader","TodoModal","userInfo","setUserInfo","URL","useEffect","fetchFunk","a","fetch","then","res","ok","json","Error","statusText","catch","error","alert","message","href","email","name","App","setTodos","data","setData","fetchFoo","console","warn","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8024c733.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[] | null;\n  options: string;\n  query: string;\n  setShow: React.Dispatch<React.SetStateAction<Todo | null>>;\n  show: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  options,\n  query,\n  setShow,\n  show,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {\n        todos\n        && todos\n          .filter(el => {\n            switch (options) {\n              case 'active':\n                return !el.completed;\n                break;\n              case 'completed':\n                return el.completed;\n                break;\n              default:\n                return el;\n                break;\n            }\n          })\n          .filter(el => el.title.includes(query))\n          .map(el => (\n            <tr\n              data-cy=\"todo\"\n              className=\"\"\n              key={el.id}\n            >\n              <td className=\"is-vcentered\">{el.userId}</td>\n              {\n                el.completed\n                  ? (\n                    <td className=\"is-vcentered\">\n                      <span className=\"icon\" data-cy=\"iconCompleted\">\n                        <i className=\"fas fa-check\" />\n                      </span>\n                    </td>\n                  ) : (\n                    <td className=\"is-vcentered\" />\n                  )\n              }\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={\n                    el.completed ? 'has-text-success' : 'has-text-danger'\n                  }\n                >\n                  {el.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    setShow(el);\n                  }}\n                >\n                  {\n                    show !== el\n                      ? (\n                        <span className=\"icon\">\n                          <i className=\"far fa-eye\" />\n                        </span>\n                      ) : (\n                        <span className=\"icon\">\n                          <i className=\"far fa-eye-slash\" />\n                        </span>\n                      )\n                  }\n                </button>\n              </td>\n            </tr>\n          ))\n      }\n    </tbody>\n  </table>\n);\n","import { useState } from 'react';\n\ntype Props = {\n  setOptions: React.Dispatch<React.SetStateAction<string>>;\n  setQuery: React.Dispatch<React.SetStateAction<string>>;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setOptions,\n  setQuery,\n}) => {\n  const [search, setSearch] = useState('');\n\n  const submitHandler = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setQuery(search);\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={(e) => {\n        submitHandler(e);\n      }}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => {\n              setOptions(e.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={(e) => {\n            setSearch(e.target.value);\n          }}\n          value={search}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {\n          search !== ''\n          && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => {\n                  setSearch('');\n                }}\n              />\n            </span>\n          )\n        }\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  show: Todo;\n  setShow: React.Dispatch<React.SetStateAction<Todo | null>>;\n};\n\nexport const TodoModal: React.FC<Props> = ({ show, setShow }) => {\n  const [userInfo, setUserInfo] = useState<null | User>(null);\n\n  const URL = `https://mate-academy.github.io/react_dynamic-list-of-todos/api/users/${show.userId}.json`;\n\n  useEffect(() => {\n    const fetchFunk = async () => {\n      fetch(URL)\n        .then(res => {\n          if (!res.ok) {\n            throw new Error(`${res.statusText}`);\n          } else {\n            return res.json();\n          }\n        })\n        .then(res => {\n          setUserInfo(res);\n        })\n        .catch((error) => {\n          // eslint-disable-next-line no-alert\n          alert(error.message);\n        });\n    };\n\n    fetchFunk();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      { userInfo === null ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${show.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setShow(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {show.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                show.completed\n                  ? (\n                    <strong className=\"has-text-success\">Done</strong>\n                  ) : (\n                    <strong className=\"has-text-danger\">Planned</strong>\n                  )\n              }\n              {' by '}\n\n              <a href={userInfo.email}>\n                {userInfo.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\n\nconst URL\n= 'https://mate-academy.github.io/react_dynamic-list-of-todos/api/todos.json';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState< Todo[] | null >(null);\n  const [data, setData] = useState< Todo[] | null >(null);\n  const [options, setOptions] = useState('all');\n  const [query, setQuery] = useState<string>('');\n  const [show, setShow] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    const fetchFoo = async () => {\n      fetch(URL)\n        .then(res => {\n          if (!res.ok) {\n            throw new Error(`${res.statusText}`);\n          } else {\n            return res.json();\n          }\n        })\n        .then(res => setTodos(res))\n        .catch((error) => {\n          // eslint-disable-next-line no-console\n          console.warn(error.message);\n        });\n    };\n\n    fetchFoo();\n  }, []);\n\n  useEffect(() => {\n    if (todos !== null) {\n      setData(todos);\n    }\n  }, [todos]);\n\n  if (todos) {\n    // eslint-disable-next-line no-console\n    console.log(todos);\n  }\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setOptions={setOptions}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                data === null\n                  ? <Loader />\n                  : (\n                    <TodoList\n                      todos={data}\n                      options={options}\n                      query={query}\n                      setShow={setShow}\n                      show={show}\n                    />\n                  )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n      {\n        show !== null\n        && <TodoModal show={show} setShow={setShow} />\n      }\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}